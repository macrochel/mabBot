import telebot, logging, db, json, requests
from telebot.types import ReplyKeyboardRemove
from keyboard import menu, social, profile, steps
from os import path as pather
from sys import stdout
from decouple import config
from validator import phone

bot = telebot.TeleBot(config("API_KEY"))
API_URL = "https://n8n.bitscompany.kz/webhook/google-sheets" #API google sheets
API_OpenAI = "https://n8n.bitscompany.kz/webhook/llm"

filterList = ["/start", "‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—à–ª—ã–π —à–∞–≥"]

#Logging into console
logger = logging.getLogger("logger")
logger.setLevel(level=logging.DEBUG)
logStreamFormatter = logging.Formatter(
  fmt=f"%(levelname)s %(asctime)s - %(message)s", 
  datefmt="%H:%M:%S"
)
consoleHandler = logging.StreamHandler(stream=stdout)
consoleHandler.setFormatter(logStreamFormatter)
consoleHandler.setLevel(level=logging.DEBUG)
logger.addHandler(consoleHandler)

#Logging into .log file
logFileFormatter = logging.Formatter(
    fmt=f"%(levelname)s %(asctime)s - %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S",
)
fileHandler = logging.FileHandler(filename="storage/loggs/.log")
fileHandler.setFormatter(logFileFormatter)
fileHandler.setLevel(level=logging.INFO)
logger.addHandler(fileHandler)

try:
    dbc, coll = db.init()
    logger.info("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
    exit(1) 

#Commands handler
@bot.message_handler(commands=["start"])
def command_message(message):
    if message.text == "/start":
        user = db.findUser(coll, message)  
        logger.info(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user}")  
        if user is None:  
            msg = "üëãüèª –ü—Ä–∏–≤–µ—Ç, –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç!)\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥ –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –∏ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è"
            sendCaptionPhoto(message.chat.id, 1, msg, ReplyKeyboardRemove())
            msg = "–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!\n\nüë§ –ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –§–ò–û\n\n–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–µ –§–ò–û —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–∞–ø–∏—Å–∞–Ω–æ —É —Ç–µ–±—è –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö (—É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏)"
            bot.send_message(message.chat.id, msg)
            bot.register_next_step_handler(message, getName)
        else:
            msg = "üëãüèª –ü—Ä–∏–≤–µ—Ç —Å–Ω–æ–≤–∞!\n–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å üòä"
            sendCaptionPhoto(message.chat.id, 1, msg, menu())

#Text handler
@bot.message_handler(content_types=["text"])
def text_message(message):
    if message.text == "üë§–ü—Ä–æ—Ñ–∏–ª—å":
        user = db.findUser(coll, message)
        msg = f"üë§–§–ò–û: {user['name']}\nüì±–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user['phone']}\nüìüid: {message.chat.id}\nüéì–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {user['education']}\nüîßHard skills: {user['hardSkills']}\nüó£Soft skills: {user['softSkills']}\nüóÇ–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {user['addInfo']}"
        bot.send_message(message.chat.id, msg, reply_markup=profile())
    elif message.text == "‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã":
        msg = "üìç–£–ª–∏—Ü–∞ –ú—É—Å—Ç–∞—Ñ—ã –û–∑—Ç—é—Ä–∫–∞, 5–∞\n\nüìû–ü—Ä–∏–µ–º–Ω–∞—è:\n+7-707-846-44-27\n+7-727-302-23-03"
        bot.send_message(message.chat.id, msg, reply_markup=social())
    elif message.text == "üìù–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é":
        user = db.findUser(coll, message)  
        logger.info(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user}")
        if user["consultation"]:
            try:
                response = requests.post(API_URL, json=user, headers={"Content-Type": "application/json"})
                logger.info(f"üì§ –û—Ç–≤–µ—Ç API: {response.status_code}, {response.text}")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ API: {e}")
        msg = "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø–∏—Å—å! –° —Ç–æ–±–æ–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂—É—Ç—Å—è ü§ó"
        bot.send_message(message.chat.id, msg)
        db.addColumn(coll, "consultation", message)
    elif message.text == "‚ùì–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã":
        msg = "https://teletype.in/@microchel.txt/QOlWJn9ape"
        bot.send_message(message.chat.id, msg)

#Callback handler
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "getProf":
        msg = "üëÄ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
        bot.send_message(call.message.chat.id, msg)
        user = db.findUser(coll, call.message)  
        logger.info(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user}")
        try:
            response = requests.post(API_OpenAI, json=user, headers={"Content-Type": "application/json"})
            logger.info(f"üì§ –û—Ç–≤–µ—Ç API: {response.status_code}, {response.text}")
            msg = response.text
            bot.send_message(call.message.chat.id, msg)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ API: {e}")
            msg = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ"
            bot.send_message(call.message.chat.id, msg)
    elif call.data == "restart":
        msg = "–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!\n\nüë§ –ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –§–ò–û\n\n–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–µ –§–ò–û —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–∞–ø–∏—Å–∞–Ω–æ —É —Ç–µ–±—è –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö (—É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏)"
        bot.send_message(call.message.chat.id, msg, reply_markup=steps())
        bot.register_next_step_handler(call.message, getName)

#Functions
def goHome(message):
        msg = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é!"
        bot.send_message(message.chat.id, msg, reply_markup=menu())

def sendCaptionPhoto(chatid, number, msg, keyboard):
    path = "storage/pictures/" + str(number) + ".png"
    if not pather.exists(path):
        bot.send_message(chatid, f"–§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ  {path}")
        return
    with open(path, "rb") as photo:
        bot.send_photo(chatid, photo, msg, reply_markup=keyboard)

#Step handlers
def getName(message):
    if message.text not in filterList:
        msg = "üìû –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´+77001234567¬ª\n\n–£–∫–∞–∂–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã 100% –æ—Ç–≤–µ—Ç–∏—à—å –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è"
        bot.send_message(message.chat.id, msg, reply_markup=steps())
        x = db.initUser(coll, message)
        logger.info(f"‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {x}")  
        bot.register_next_step_handler(message, getPhone)
        db.addColumn(coll, "name", message)

def getPhone(message):
    if message.text not in filterList and phone(message.text):
        msg = "üè´ –£–∫–∞–∂–∏ —Å–∫–æ–ª—å–∫–æ –∫–ª–∞—Å—Å–æ–≤ —Ç—ã –æ–∫–æ–Ω—á–∏–ª\n\n–ú–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫—É—Ä—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –∏ —Ç.–ø"
        bot.send_message(message.chat.id, msg)
        db.addColumn(coll, "phone", message)
        bot.register_next_step_handler(message, getEducation)        
    elif phone(message.text) != True:
        msg = "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –≤–≤–æ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´+77001234567¬ª"
        bot.send_message(message.chat.id, msg, reply_markup=nextstep())
        bot.register_next_step_handler(message, getPhone)
    elif message.text == "‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—à–ª—ã–π —à–∞–≥":
        msg = "–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!\n\nüë§ –ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –§–ò–û\n\n–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–µ –§–ò–û —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–∞–ø–∏—Å–∞–Ω–æ —É —Ç–µ–±—è –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö (—É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏)"
        bot.send_message(message.chat.id, msg)
        bot.register_next_step_handler(message, getName)

def getEducation(message):
    if message.text not in filterList:
        msg = "–£–∫–∞–∂–∏ —Å–≤–æ–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤–ª–∞–¥–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —è–∑—ã–∫–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∑–Ω–∞–Ω–∏–µ –æ—Å–Ω–æ–≤ —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–æ–≤ —É—á–µ—Ç–∞"
        bot.send_message(message.chat.id, msg)
        db.addColumn(coll, "education", message)
        bot.register_next_step_handler(message, getHard)
    elif message.text == "‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—à–ª—ã–π —à–∞–≥":
        msg = "üìû –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´+77001234567¬ª\n\n–£–∫–∞–∂–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã 100% –æ—Ç–≤–µ—Ç–∏—à—å –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è"
        bot.send_message(message.chat.id, msg)
        bot.register_next_step_handler(message, getPhone)

def getHard(message):
    if message.text not in filterList:
        msg = "–ù–∞–≤—ã–∫–∏ Soft skills\n\n–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, —É–≤–µ—Ä–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ü–ö‚Ä¶\n\n–õ—É—á—à–µ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ soft skills. –ù–∞–ø—Ä–∏–º–µ—Ä:\n- –ù–∞–≤—ã–∫ –≤–µ–¥–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏–Ω–≥–æ–≤.\n- –ù–∞–≤—ã–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏.\n- –í—ã—Å–æ–∫–∏–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç.\n- –ó–Ω–∞–Ω–∏–µ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏ —Ç.–ø.\n\n–ê –µ—Å–ª–∏ –≤–∞–º —Ö–æ—á–µ—Ç—Å—è —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–≤–æ–∏—Ö –ª–∏—á–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤–∞—Ö, —Ç–æ —É–ø–æ–º—è–Ω–∏—Ç–µ –∏—Ö –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è¬ª"
        bot.send_message(message.chat.id, msg)
        db.addColumn(coll, "hardSkills", message)
        bot.register_next_step_handler(message, getSoft)
    elif message.text == "‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—à–ª—ã–π —à–∞–≥":
        msg = "–£–∫–∞–∂–∏ —Å–≤–æ–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤–ª–∞–¥–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —è–∑—ã–∫–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∑–Ω–∞–Ω–∏–µ –æ—Å–Ω–æ–≤ —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–æ–≤ —É—á–µ—Ç–∞"
        bot.send_message(message.chat.id, msg)
        bot.register_next_step_handler(message, getHard)

def getSoft(message):
    if message.text not in filterList:
        msg = "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è.\n\n–ü—Ä–∏–º–µ—Ä, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª:\n\n–í–µ—Ä–Ω–æ:\n–í—ã—Å—Ç—Ä–∞–∏–≤–∞—é –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –≤–∑–∞–∏–º–æ—É–≤–∞–∂–µ–Ω–∏–µ –∏ –¥–æ–≤–µ—Ä–∏–∏.\n\n–ù–µ–≤–µ—Ä–Ω–æ:\n–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å."
        bot.send_message(message.chat.id, msg)
        db.addColumn(coll, "softSkills", message)
        bot.register_next_step_handler(message, getInfo)
    elif message.text == "‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—à–ª—ã–π —à–∞–≥":
        msg = "–ù–∞–≤—ã–∫–∏ Soft skills\n\n–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, —É–≤–µ—Ä–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ü–ö‚Ä¶\n\n–õ—É—á—à–µ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ soft skills. –ù–∞–ø—Ä–∏–º–µ—Ä:\n- –ù–∞–≤—ã–∫ –≤–µ–¥–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏–Ω–≥–æ–≤.\n- –ù–∞–≤—ã–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏.\n- –í—ã—Å–æ–∫–∏–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç.\n- –ó–Ω–∞–Ω–∏–µ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏ —Ç.–ø.\n\n–ê –µ—Å–ª–∏ –≤–∞–º —Ö–æ—á–µ—Ç—Å—è —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–≤–æ–∏—Ö –ª–∏—á–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤–∞—Ö, —Ç–æ —É–ø–æ–º—è–Ω–∏—Ç–µ –∏—Ö –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è¬ª"
        bot.send_message(message.chat.id, msg)
        bot.register_next_step_handler(message, getSoft)

def getInfo(message):
    if message.text not in filterList:
        msg = "üòä –†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É!"
        bot.send_message(message.chat.id, msg, reply_markup=menu())
        db.addColumn(coll, "addInfo", message)
    elif message.text == "‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—à–ª—ã–π —à–∞–≥":
        msg = "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è.\n\n–ü—Ä–∏–º–µ—Ä, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª:\n\n–í–µ—Ä–Ω–æ:\n–í—ã—Å—Ç—Ä–∞–∏–≤–∞—é –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –≤–∑–∞–∏–º–æ—É–≤–∞–∂–µ–Ω–∏–µ –∏ –¥–æ–≤–µ—Ä–∏–∏.\n\n–ù–µ–≤–µ—Ä–Ω–æ:\n–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å."
        bot.send_message(message.chat.id, msg)
        db.addColumn(coll, "softSkills", message)
        bot.register_next_step_handler(message, getSoft)

#Polling
bot.polling(none_stop = True)